{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAeeA,EAbF,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAE3B,OACK,sBAAKC,UAAU,+CAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACE,6BAAKF,IACL,4BAAIC,WCeCK,EArBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,8BAECA,EAAOC,KAAI,SAACC,EAAMC,GACnB,OACC,cAAC,EAAD,CAEER,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKGC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aACjC,OACC,qBAAKV,UAAU,MAAf,SACC,uBACAA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACTC,SAAUH,OCCDI,EARA,SAACC,GACf,OACK,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACIJ,EAAMK,YCmBDC,E,kDArBd,WAAYN,GAAQ,IAAD,8BAClB,cAAMA,IACDO,MAAQ,CACZC,UAAU,GAHO,E,qDAOhB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAGjC,WACC,OAAIG,KAAKJ,MAAMC,SACN,6DAGFG,KAAKX,MAAMK,a,GAjBOQ,aCoDZC,G,wDA7Cb,aAAe,IAAD,8BACb,gBAeHC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAfvC,EAAKX,MAAQ,CACZlB,OAAQ,GACRK,YAAa,IAJF,E,qDASd,WAAqB,IAAD,OACnByB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAEvB,OAAQkC,S,oBASvC,WAAU,IAAD,EACsBZ,KAAKJ,MAA5BlB,EADC,EACDA,OAAOK,EADN,EACMA,YACT8B,EAAiBnC,EAAOoC,QAAO,SAAAC,GACpC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAEtD,OAAQtC,EAAOwC,OAIf,sBAAK5C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU1B,OAAQmC,WARpB,gD,GA5BYX,cCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4848e6cf.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id }) => {\r\n\t\r\n\treturn (\r\n      <div className='bg-light-green dib br3 pa3 ma2 grow shadow-5'>\r\n        <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n        <div>\r\n          <h2>{name}</h2>\r\n          <p>{email}</p>\r\n          </div>\r\n          </div> \r\n\r\n\t\t);\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\t\t\r\n  return (\r\n    <div>\r\n    \t{\r\n    \trobots.map((user, i) => {\t\r\n\t\t  return (\r\n\t\t  \t<Card\r\n\t\t\t  \t key={i} \r\n\t\t\t  \t id={robots[i].id} \r\n\t\t\t  \t name={robots[i].name} \r\n\t\t\t  \t email={robots[i].email}\r\n\t\t\t  \t />\r\n\t\t\t  \t );\r\n\t\t  })\r\n\r\n    \t}\r\n    </div>\r\n\r\n  \t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n\treturn (\r\n\t <div className='pa2'>\r\n\t  <input \r\n\t  className='pa3 ba b--green bg-lightest-blue'\r\n\t  type='search' \r\n\t  placeholder='search robots' \r\n      onChange={searchChange}\r\n\t  />\t\r\n\t </div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n      <div style={{ overflowY: 'Scroll', border: '5px solid black', height: '800px'}}>\r\n         {props.children}\r\n      </div>\r\n\t);\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t  return <h1>OOOoops... That is not good</h1>\r\n\t\t}\r\n\r\n\t\treturn this.props.children  \t\r\n\r\n\t}\r\n} \r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n  \tsuper()\r\n    this.state = {\r\n    \trobots: [],\r\n\t    searchfield: ''\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n  \tfetch('https://jsonplaceholder.typicode.com/users')\r\n  \t.then(response=> response.json())\r\n  \t.then(users => this.setState({ robots: users }));\r\n  \t\r\n  }\r\n\r\nonSearchChange = (event) => {\r\n\tthis.setState({ searchfield: event.target.value })\r\n\t\r\n}\r\n\r\n   render() {\r\n   const { robots,searchfield } = this.state;\r\n   const filteredRobots = robots.filter(robot =>{\r\n\t   return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t})\t\r\n   return !robots.length ?\r\n   \t  <h1>Loading...</h1> :\r\n   \r\n\t (\r\n\t  <div className='tc'>\t\r\n\t   <h1 className='f1'>RoboFriends</h1>\r\n\t   <SearchBox searchChange={this.onSearchChange} />\r\n\t   <Scroll>\r\n      <ErrorBoundry>\r\n        <CardList robots={filteredRobots} />\r\n      </ErrorBoundry>  \r\n       </Scroll>\r\n      </div> \r\n\r\n\t\t);\r\n\t  }\r\n\t\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n   <App /> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}